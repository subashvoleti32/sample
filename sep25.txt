###########

{"country":"US","name":"avid_moviegoer_code","name_label":"Avid Moviegoer Code","values":{"N":{"label":"N = The person is not an avid moviegoer","description":"N = The person is not an avid moviegoer"},"Y":{"label":"Y = The person is an avid moviegoer.","description":"Y = The person is an avid moviegoer."}}},{"country":"US","name":"education_ranges","name_label":"Education Ranges","values":{"":{"label":"Blank for persons < 18.","description":"Blank for persons < 18."},"1":{"label":"1 = grade school (i.e., 0-8 years)","description":"1 = grade school (i.e., 0-8 years)"},"2":{"label":"2 = Some High School (i.e., 9-11 years)","description":"2 = Some High School (i.e., 9-11 years)"},"3":{"label":"3 = High School graduate (i.e., 12 years)","description":"3 = High School graduate (i.e., 12 years)"},"4":{"label":"4 = Some college (i.e., 1-3 years of college)","description":"4 = Some college (i.e., 1-3 years of college)"},"5":{"label":"5 = College Graduate (i.e., 4+ years of college)","description":"5 = College Graduate (i.e., 4+ years of college)"}}},{"country":"US","name":"frequent_moviegoer_code","name_label":"Frequent Moviegoer Code","values":{"N":{"label":"N= The person is not a frequent moviegoer.","description":"N= The person is not a frequent moviegoer."},"Y":{"label":"Y= The person is a frequent moviegoer.","description":"Y= The person is a frequent moviegoer."}}}
1) we have two columns in bigquery which have multiple values for every attribute,name.
2) in spanner database we have 4columns name,country_code,attribute_values,value_label
class Attribute(Base):
    __tablename__ = "attribute"

    country = Column("country_code", String(2), primary_key=True, nullable=False)
    # from the member_attribute_dim
    # attribute_name
    name = Column("name", String(400), primary_key=True, nullable=False)
    name_label = Column("name_label", String(400))
    # attribute_values
    values = Column("values", JSON) 
    description = Column("description", String(250))

here in the bigquery we have only name,values data in bigquery database
2) we need to store name_label and description values manually we need to insert into spanner database.
3) write an fastapi that will manually insert name_label,description manually into spanner database 

let me give a example 

in bigquery 

{'member_attribute_name': 'race', 'member_attr_val': '2,4,5,1,3,99'}

here member_attribute_name mapping to name in spanner database.

and member_attr_val mapping to values in spanner database

now let's give a example

for every member_attr_val it need to split and for each value there is a descriptoin and label

name:-race;name_label:-03,description:-black

write a fastapi that will insert data into spanner for those remaining columns



[
  {
    "name_label": "education ranges",
    "description": null,
    "updated_at": "1970-01-01T05:30:00+00:00",
    "name": "education_ranges",
    "country": "US",
    "values": {
      "1": {
        "description": "01 HOH",
        "label": "01 HOH"
      },
      "2": {
        "description": "02 LOH",
        "label": "02 LOH"
      },
      "3": {
        "description": "03 Wife Not Designated As HOH",
        "label": "03 Wife Not Designated As HOH"
      },
      "4": {
        "description": "04 Spouse Not Designated As HOH",
        "label": "04 Spouse Not Designated As HOH"
      },
      "5": {
        "description": "05 Son",
        "label": "05 Son"
      }
    },
    "created_at": "2023-09-25T14:58:22.403887+00:00"
  },
  {
    "name_label": "head of household flag",
    "description": null,
    "updated_at": "1970-01-01T05:30:00+00:00",
    "name": "head_of_household_flag",
    "country": "US",
    "values": {
      "N": {
        "description": "N = The person does not work outside of the home",
        "label": "N = The person does not work outside of the home"
      },
      "Y": {
        "description": "Y = The person works outside of the home",
        "label": "Y = The person works outside of the home"
      }
    },
    "created_at": "2023-09-25T14:58:22.403887+00:00"
  },




US,education_ranges,,Blank for persons < 18.
US,education_ranges,1,"1 = grade school (i.e., 0-8 years)"
US,education_ranges,2,"2 = Some High School (i.e., 9-11 years)"
US,education_ranges,3,"3 = High School graduate (i.e., 12 years)"
US,education_ranges,4,"4 = Some college (i.e., 1-3 years of college)"
US,education_ranges,5,"5 = College Graduate (i.e., 4+ years of college)"
  {
    "name_label": "internet usage work",
    "description": null,
    "updated_at": "1970-01-01T05:30:00+00:00",
    "name": "internet_usage_work",
    "country": "US",
    "values": {
      "0": {
        "description": "The number of hours a week the person works (00-99)",
        "label": "The number of hours a week the person works (00-99)"
      },
      "1": {
        "description": "01 HOH",
        "label": "01 HOH"
      },
      "2": {
        "description": "02 LOH",
        "label": "02 LOH"
      },
      "3": {
        "description": "03 Wife Not Designated As HOH",
        "label": "03 Wife Not Designated As HOH"
      },
      "4": {
        "description": "04 Spouse Not Designated As HOH",
        "label": "04 Spouse Not Designated As HOH"
      },
      "5": {
        "description": "05 Son",
        "label": "05 Son"
      },
      "6": {
        "description": "06 Daughter",
        "label": "06 Daughter"
      },
      "7": {
        "description": "07 Other Relative",
        "label": "07 Other Relative"
      },
      "8": {
        "description": "08 Non-Relative Household Member",
        "label": "08 Non-Relative Household Member"
      },
      "9": {
        "description": "09 Partner Living With But Not Married To",
        "label": "09 Partner Living With But Not Married To"
      },
      "10": {
        "description": "10 Long Term Visitor",
        "label": "10 Long Term Visitor"
      },
      "11": {
        "description": "11 LOH as HOH",
        "label": "11 LOH as HOH"
      },
      "12": {
        "description": "",
        "label": ""
      },
      "13": {
        "description": "",
        "label": ""
      },
      "14": {
        "description": "Unmarried Partner - Female",
        "label": "Unmarried Partner - Female"
      },
      "15": {
        "description": "Unmarried Partner - Male",
        "label": "Unmarried Partner - Male"
      },
      "16": {
        "description": "",
        "label": ""
      },
      "17": {
        "description": "",
        "label": ""
      },
      "18": {
        "description": "",
        "label": ""
      },
      "19": {
        "description": "",
        "label": ""
      },
      "20": {
        "description": "",
        "label": ""
      },
      "21": {
        "description": "",
        "label": ""
      },
      "22": {
        "description": "",
        "label": ""
      },
      "23": {
        "description": "",
        "label": ""
      },
      "24": {
        "description": "",
        "label": ""
      },
      "25": {
        "description": "",
        "label": ""
      },
      "26": {
        "description": "",
        "label": ""
      },
      "27": {
        "description": "",
        "label": ""
      },
      "28": {
        "description": "",
        "label": ""
      },
      "29": {
        "description": "",
        "label": ""
      },
      "30": {
        "description": "",
        "label": ""
      },
      "31": {
        "description": "",
        "label": ""
      },
      "32": {
        "description": "",
        "label": ""
      },
      "33": {








{'member_attribute_name': 'working_women_part_time_flag', 'member_attr_val': 'Y,N'}
{'member_attribute_name': 'avid_moviegoer_code', 'member_attr_val': 'N,Y'}
{'member_attribute_name': 'internet_usage_home', 'member_attr_val': '3,31,162,0,109,24,23,7,18,53,119,59,96,82,65,35,133,57,106,54,89,78,2,124,144,117,32,81,116,83,98,108,159,123,37,74,69,9,161,68,79,157,114,27,156,16,165,94,127,145,105,166,155,70,1,92,151,62,64,163,111,107,168,52,39,60,97,118,103,131,28,4,102,128,8,25,99,139,100,91,148,66,101,126,113,87,164,125,34,45,160,26,14,150,58,147,73,38,46,112,104,40,77,72,15,49,33,6,63,93,85,143,132,84,10,129,115,153,135,86,51,136,20,122,30,80,47,11,61,130,158,71,17,152,5,121,90,110,95,22,44,43,55,29,88,13,76,56,48,50,75,42,120,67,21,140,41,154,19,36,12,138'}
{'member_attribute_name': 'works_outside_of_home_flag', 'member_attr_val': 'Y,,N'}
{'member_attribute_name': 'number_of_years_spent_in_the_united_states', 'member_attr_val': '2,9,4,1,5,6,3'}
{'member_attribute_name': 'visitor_status_code', 'member_attr_val': ',L'}
{'member_attribute_name': 'frequent_moviegoer_code', 'member_attr_val': 'N,Y'}
{'member_attribute_name': 'number_of_working_hours', 'member_attr_val': '15,38,68,77,92,62,85,21,12,73,13,44,54,65,48,71,2,47,95,51,94,32,11,29,42,66,41,45,80,97,98,35,24,64,6,36,59,20,22,53,63,87,4,86,39,8,76,74,46,83,93,81,37,72,19,57,26,55,96,25,60,16,90,61,79,33,91,78,75,34,7,1,10,84,89,56,0,9,30,52,14,17,18,31,67,27,70,99,23,43,5,28,88,40,82,69,49,50,58,3'}
{'member_attribute_name': 'lady_of_household_flag', 'member_attr_val': 'N,Y'}
{'member_attribute_name': 'nielsen_occupation_code', 'member_attr_val': '0,8,7,1,3,2,4,6,5'}
{'member_attribute_name': 'internet_usage_work', 'member_attr_val': '119,71,140,73,45,0,46,117,112,62,168,12,70,104,28,2,48,14,134,42,81,51,74,85,9,63,110,57,150,1,157,86,43,126,4,65,94,7,25,56,144,125,76,101,8,78,79,102,66,67,91,23,120,107,10,16,145,72,123,52,59,15,58,34,165,116,64,29,82,113,84,108,68,38,44,98,90,115,32,6,160,61,40,30,75,99,95,39,128,105,100,22,11,54,5,55,13,17,31,36,50,41,24,33,142,18,20,47,60,37,26,3,93,53,92,49,96,35,77,19,21,27,80'}
{'member_attribute_name': 'race', 'member_attr_val': '2,4,5,1,3,99'}
{'member_attribute_name': 'principal_shopper', 'member_attr_val': 'N,Y'}
{'member_attribute_name': 'origin', 'member_attr_val': '9,2,1'}
{'member_attribute_name': 'principal_moviegoer_code', 'member_attr_val': 'Y,N'}
{'member_attribute_name': 'education_ranges', 'member_attr_val': '3,5,4,2,1'}
{'member_attribute_name': 'working_women_full_time_flag', 'member_attr_val': 'Y,N'}
{'member_attribute_name': 'relationship_to_head_of_household_code', 'member_attr_val': '10,7,13,1,3,6,4,2,5,14,8,9,15,11'}
{'member_attribute_name': 'language_class_code', 'member_attr_val': '3,2,6,5,1,4'}
{'member_attribute_name': 'head_of_household_flag', 'member_attr_val': 'N,Y'}


country_code,attribute_name,attribute_value,value_label
US,avid_moviegoer_code,N,N = The person is not an avid moviegoer
US,avid_moviegoer_code,Y,Y = The person is an avid moviegoer.
US,education_ranges,,Blank for persons < 18.
US,education_ranges,1,"1 = grade school (i.e., 0-8 years)"
US,education_ranges,2,"2 = Some High School (i.e., 9-11 years)"
US,education_ranges,3,"3 = High School graduate (i.e., 12 years)"
US,education_ranges,4,"4 = Some college (i.e., 1-3 years of college)"
US,education_ranges,5,"5 = College Graduate (i.e., 4+ years of college)"
US,frequent_moviegoer_code,N,N= The person is not a frequent moviegoer.
US,frequent_moviegoer_code,Y,Y= The person is a frequent moviegoer.
US,head_of_household_flag,N,N = The person is not the Head of Household
US,head_of_household_flag,Y,Y = The person is the Head of Household
US,internet_usage_home,0,The number of hours a person spends on the internet at work or performing work-related activities away from home in a week (000 - 168)
US,internet_usage_home,1,
US,internet_usage_home,10,
US,internet_usage_home,100,
US,internet_usage_home,101,
US,internet_usage_home,102,
US,internet_usage_home,103,
US,internet_usage_home,104,
US,internet_usage_home,105,
US,internet_usage_home,106,
US,internet_usage_home,107,
US,internet_usage_home,108,
US,internet_usage_home,109,
US,internet_usage_home,11,
US,internet_usage_home,110,
US,internet_usage_home,111,
US,internet_usage_home,112,
US,internet_usage_home,113,
US,internet_usage_home,114,
US,internet_usage_home,115,
US,internet_usage_home,116,
US,internet_usage_home,117,
US,internet_usage_home,118,
US,internet_usage_home,119,
US,internet_usage_home,12,
US,internet_usage_home,120,
US,internet_usage_home,122,
US,internet_usage_home,123,
US,internet_usage_home,124,
US,internet_usage_home,125,
US,internet_usage_home,126,
US,internet_usage_home,127,
US,internet_usage_home,128,
US,internet_usage_home,129,
US,internet_usage_home,13,
US,internet_usage_home,130,
US,internet_usage_home,132,
US,internet_usage_home,133,
US,internet_usage_home,135,
US,internet_usage_home,136,
US,internet_usage_home,138,
US,internet_usage_home,14,
US,internet_usage_home,140,
US,internet_usage_home,144,
US,internet_usage_home,145,
US,internet_usage_home,147,
US,internet_usage_home,148,
US,internet_usage_home,15,
US,internet_usage_home,150,
US,internet_usage_home,151,
US,internet_usage_home,152,
US,internet_usage_home,153,
US,internet_usage_home,154,
US,internet_usage_home,155,
US,internet_usage_home,156,
US,internet_usage_home,157,
US,internet_usage_home,159,
US,internet_usage_home,16,
US,internet_usage_home,160,
US,internet_usage_home,161,
US,internet_usage_home,162,
US,internet_usage_home,164,
US,internet_usage_home,165,
US,internet_usage_home,166,
US,internet_usage_home,168,
US,internet_usage_home,17,
US,internet_usage_home,18,
US,internet_usage_home,19,
US,internet_usage_home,2,
US,internet_usage_home,20,
US,internet_usage_home,21,
US,internet_usage_home,22,
US,internet_usage_home,23,
US,internet_usage_home,24,
US,internet_usage_home,25,
US,internet_usage_home,26,
US,internet_usage_home,27,
US,internet_usage_home,28,
US,internet_usage_home,29,
US,internet_usage_home,3,
US,internet_usage_home,30,
US,internet_usage_home,31,
US,internet_usage_home,32,
US,internet_usage_home,33,
US,internet_usage_home,34,
US,internet_usage_home,35,
US,internet_usage_home,36,
US,internet_usage_home,37,
US,internet_usage_home,38,
US,internet_usage_home,39,
US,internet_usage_home,4,
US,internet_usage_home,40,
US,internet_usage_home,41,
US,internet_usage_home,42,
US,internet_usage_home,43,
US,internet_usage_home,44,
US,internet_usage_home,45,
US,internet_usage_home,46,
US,internet_usage_home,47,
US,internet_usage_home,48,
US,internet_usage_home,49,
US,internet_usage_home,5,
US,internet_usage_home,50,
US,internet_usage_home,51,
US,internet_usage_home,52,
US,internet_usage_home,53,
US,internet_usage_home,54,
US,internet_usage_home,55,
US,internet_usage_home,56,
US,internet_usage_home,57,
US,internet_usage_home,58,
US,internet_usage_home,59,
US,internet_usage_home,6,
US,internet_usage_home,60,
US,internet_usage_home,61,
US,internet_usage_home,62,
US,internet_usage_home,63,
US,internet_usage_home,64,
US,internet_usage_home,65,
US,internet_usage_home,66,
US,internet_usage_home,67,
US,internet_usage_home,68,
US,internet_usage_home,69,
US,internet_usage_home,7,
US,internet_usage_home,70,
US,internet_usage_home,71,
US,internet_usage_home,72,
US,internet_usage_home,73,
US,internet_usage_home,74,
US,internet_usage_home,75,
US,internet_usage_home,76,
US,internet_usage_home,77,
US,internet_usage_home,78,
US,internet_usage_home,79,
US,internet_usage_home,8,
US,internet_usage_home,80,
US,internet_usage_home,81,
US,internet_usage_home,82,
US,internet_usage_home,83,
US,internet_usage_home,84,
US,internet_usage_home,85,
US,internet_usage_home,86,
US,internet_usage_home,87,
US,internet_usage_home,88,
US,internet_usage_home,89,
US,internet_usage_home,9,
US,internet_usage_home,90,
US,internet_usage_home,91,
US,internet_usage_home,92,
US,internet_usage_home,93,
US,internet_usage_home,94,
US,internet_usage_home,95,
US,internet_usage_home,96,
US,internet_usage_home,97,
US,internet_usage_home,98,
US,internet_usage_home,99,
US,internet_usage_work,0,
US,internet_usage_work,1,
US,internet_usage_work,10,
US,internet_usage_work,100,
US,internet_usage_work,101,
US,internet_usage_work,102,
US,internet_usage_work,104,
US,internet_usage_work,105,
US,internet_usage_work,107,
US,internet_usage_work,11,
US,internet_usage_work,110,
US,internet_usage_work,112,
US,internet_usage_work,117,
US,internet_usage_work,119,
US,internet_usage_work,12,
US,internet_usage_work,120,
US,internet_usage_work,123,
US,internet_usage_work,125,
US,internet_usage_work,126,
US,internet_usage_work,128,
US,internet_usage_work,13,
US,internet_usage_work,134,
US,internet_usage_work,14,
US,internet_usage_work,140,
US,internet_usage_work,15,
US,internet_usage_work,150,
US,internet_usage_work,157,
US,internet_usage_work,16,
US,internet_usage_work,165,
US,internet_usage_work,17,
US,internet_usage_work,18,
US,internet_usage_work,19,
US,internet_usage_work,2,
US,internet_usage_work,20,
US,internet_usage_work,21,
US,internet_usage_work,22,
US,internet_usage_work,23,
US,internet_usage_work,24,
US,internet_usage_work,25,
US,internet_usage_work,26,
US,internet_usage_work,27,
US,internet_usage_work,28,
US,internet_usage_work,29,
US,internet_usage_work,3,
US,internet_usage_work,30,
US,internet_usage_work,31,
US,internet_usage_work,32,
US,internet_usage_work,33,
US,internet_usage_work,34,
US,internet_usage_work,35,
US,internet_usage_work,36,
US,internet_usage_work,37,
US,internet_usage_work,38,
US,internet_usage_work,39,
US,internet_usage_work,4,
US,internet_usage_work,40,
US,internet_usage_work,41,
US,internet_usage_work,42,
US,internet_usage_work,43,
US,internet_usage_work,44,
US,internet_usage_work,45,
US,internet_usage_work,46,
US,internet_usage_work,47,
US,internet_usage_work,48,
US,internet_usage_work,49,
US,internet_usage_work,5,
US,internet_usage_work,50,
US,internet_usage_work,51,
US,internet_usage_work,52,
US,internet_usage_work,53,
US,internet_usage_work,54,
US,internet_usage_work,55,
US,internet_usage_work,56,
US,internet_usage_work,57,
US,internet_usage_work,58,
US,internet_usage_work,59,
US,internet_usage_work,6,
US,internet_usage_work,60,
US,internet_usage_work,61,
US,internet_usage_work,62,
US,internet_usage_work,63,
US,internet_usage_work,64,
US,internet_usage_work,65,
US,internet_usage_work,66,
US,internet_usage_work,67,
US,internet_usage_work,68,
US,internet_usage_work,7,
US,internet_usage_work,70,
US,internet_usage_work,72,
US,internet_usage_work,73,
US,internet_usage_work,74,
US,internet_usage_work,75,
US,internet_usage_work,76,
US,internet_usage_work,77,
US,internet_usage_work,78,
US,internet_usage_work,79,
US,internet_usage_work,8,
US,internet_usage_work,80,
US,internet_usage_work,81,
US,internet_usage_work,82,
US,internet_usage_work,84,
US,internet_usage_work,85,
US,internet_usage_work,86,
US,internet_usage_work,9,
US,internet_usage_work,90,
US,internet_usage_work,91,
US,internet_usage_work,92,
US,internet_usage_work,93,
US,internet_usage_work,94,
US,internet_usage_work,95,
US,internet_usage_work,96,
US,internet_usage_work,98,
US,lady_of_household_flag,N,
US,lady_of_household_flag,Y,
US,language_class_code,1,1 = Spanish Only
US,language_class_code,2,2 = Mostly Spanish
US,language_class_code,3,3 = Bilingual
US,language_class_code,4,4 = Mostly English
US,language_class_code,5,5 = English Only
US,language_class_code,6,6 = Unknown
US,nielsen_occupation_code,0,00=Professional/Technical
US,nielsen_occupation_code,1,01=Administrator/Manager
US,nielsen_occupation_code,2,02=Sales/Clerical
US,nielsen_occupation_code,3,03=Farm
US,nielsen_occupation_code,4,04=Craftsmen
US,nielsen_occupation_code,5,05=Operatives/Transport
US,nielsen_occupation_code,6,06=Service Workers
US,nielsen_occupation_code,7,07=Private Household/Laborer
US,nielsen_occupation_code,8,08=Retired Not Seeking Employment
US,number_of_working_hours,0,The number of hours a week the person works (00-99)
US,number_of_working_hours,1,
US,number_of_working_hours,10,
US,number_of_working_hours,11,
US,number_of_working_hours,12,
US,number_of_working_hours,13,
US,number_of_working_hours,14,
US,number_of_working_hours,15,
US,number_of_working_hours,16,
US,number_of_working_hours,17,
US,number_of_working_hours,18,
US,number_of_working_hours,19,
US,number_of_working_hours,2,
US,number_of_working_hours,20,
US,number_of_working_hours,21,
US,number_of_working_hours,22,
US,number_of_working_hours,23,
US,number_of_working_hours,24,
US,number_of_working_hours,25,
US,number_of_working_hours,26,
US,number_of_working_hours,27,
US,number_of_working_hours,28,
US,number_of_working_hours,29,
US,number_of_working_hours,3,
US,number_of_working_hours,30,
US,number_of_working_hours,31,
US,number_of_working_hours,32,
US,number_of_working_hours,33,
US,number_of_working_hours,34,
US,number_of_working_hours,35,
US,number_of_working_hours,36,
US,number_of_working_hours,37,
US,number_of_working_hours,38,
US,number_of_working_hours,39,
US,number_of_working_hours,4,
US,number_of_working_hours,40,
US,number_of_working_hours,41,
US,number_of_working_hours,42,
US,number_of_working_hours,43,
US,number_of_working_hours,44,
US,number_of_working_hours,45,
US,number_of_working_hours,46,
US,number_of_working_hours,47,
US,number_of_working_hours,48,
US,number_of_working_hours,49,
US,number_of_working_hours,5,
US,number_of_working_hours,50,
US,number_of_working_hours,51,
US,number_of_working_hours,52,
US,number_of_working_hours,53,
US,number_of_working_hours,54,
US,number_of_working_hours,55,
US,number_of_working_hours,56,
US,number_of_working_hours,57,
US,number_of_working_hours,58,
US,number_of_working_hours,59,
US,number_of_working_hours,6,
US,number_of_working_hours,60,
US,number_of_working_hours,61,
US,number_of_working_hours,62,
US,number_of_working_hours,63,
US,number_of_working_hours,64,
US,number_of_working_hours,65,
US,number_of_working_hours,66,
US,number_of_working_hours,67,
US,number_of_working_hours,68,
US,number_of_working_hours,69,
US,number_of_working_hours,7,
US,number_of_working_hours,70,
US,number_of_working_hours,71,
US,number_of_working_hours,72,
US,number_of_working_hours,73,
US,number_of_working_hours,74,
US,number_of_working_hours,75,
US,number_of_working_hours,76,
US,number_of_working_hours,77,
US,number_of_working_hours,78,
US,number_of_working_hours,79,
US,number_of_working_hours,8,
US,number_of_working_hours,80,
US,number_of_working_hours,81,
US,number_of_working_hours,82,
US,number_of_working_hours,83,
US,number_of_working_hours,84,
US,number_of_working_hours,85,
US,number_of_working_hours,86,
US,number_of_working_hours,87,
US,number_of_working_hours,88,
US,number_of_working_hours,89,
US,number_of_working_hours,9,
US,number_of_working_hours,90,
US,number_of_working_hours,91,
US,number_of_working_hours,92,
US,number_of_working_hours,93,
US,number_of_working_hours,94,
US,number_of_working_hours,95,
US,number_of_working_hours,96,
US,number_of_working_hours,97,
US,number_of_working_hours,98,
US,number_of_working_hours,99,
US,number_of_years_spent_in_the_united_states,,"Blank for files created prior to Sept 25, 2017"
US,number_of_years_spent_in_the_united_states,1,1 = Less than 5 Years
US,number_of_years_spent_in_the_united_states,2,2 = 5 to 10 Years
US,number_of_years_spent_in_the_united_states,3,3 = 10 to 15 Years
US,number_of_years_spent_in_the_united_states,4,4 = 15 to 20 Years
US,number_of_years_spent_in_the_united_states,5,5 = Over 20 Years
US,number_of_years_spent_in_the_united_states,6,6 = Born in the USA
US,number_of_years_spent_in_the_united_states,9,9 = Unknown
US,origin,,"Blank for files created prior to Sept 25, 2017"
US,origin,1,1 = Non-Hispanic
US,origin,2,2 = Hispanic
US,origin,9,9 = Unknown
US,principal_moviegoer_code,N,N= The person is not a frequent moviegoer.
US,principal_moviegoer_code,Y,Y= The person is a frequent moviegoer.
US,principal_shopper,N,N = This person is not the principal grocery shopper in the household
US,principal_shopper,Y,Y = This person is the principal grocery shopper in the household.
US,race,,"Blank for files created prior to Sept 25, 2017"
US,race,1,01 = Other Race
US,race,2,02 = White
US,race,3,03 = Black
US,race,4,04 = Asian or Pacific Islander
US,race,5,05 = American Indian/Alaska Native
US,race,99,99 = Unknown
US,relationship_to_head_of_household_code,1,01 HOH
US,relationship_to_head_of_household_code,10,10 Long Term Visitor
US,relationship_to_head_of_household_code,11,11 LOH as HOH
US,relationship_to_head_of_household_code,14,Unmarried Partner - Female
US,relationship_to_head_of_household_code,15,Unmarried Partner - Male
US,relationship_to_head_of_household_code,2,02 LOH
US,relationship_to_head_of_household_code,3,03 Wife Not Designated As HOH
US,relationship_to_head_of_household_code,4,04 Spouse Not Designated As HOH
US,relationship_to_head_of_household_code,5,05 Son
US,relationship_to_head_of_household_code,6,06 Daughter
US,relationship_to_head_of_household_code,7,07 Other Relative
US,relationship_to_head_of_household_code,8,08 Non-Relative Household Member
US,relationship_to_head_of_household_code,9,09 Partner Living With But Not Married To
US,visitor_status_code,,Blank = household member.
US,visitor_status_code,L,L = long-term visitor
US,working_women_full_time_flag,N,N = This person is not a full time working woman
US,working_women_full_time_flag,Y,Y = This person is a full time working woman
US,working_women_part_time_flag,N,N = This person is not a part time working woman
US,working_women_part_time_flag,Y,Y = This person is a part time working woman
US,works_outside_of_home_flag,,Blank for Long Term Visitors
US,works_outside_of_home_flag,N,N = The person does not work outside of the home
US,works_outside_of_home_flag,Y,Y = The person works outside of the home
US,gender,m,Male
US,gender,f,Female


 {
    "name_label": "education ranges",
    "description": null,
    "updated_at": "1970-01-01T05:30:00+00:00",
    "name": "education_ranges",
    "country": "US",
    "values": {
      "values": {
        "attribute_labels": "03 Wife Not Designated As HOH,05 Son,04 Spouse Not Designated As HOH,02 LOH,01 HOH",
        "description": "03 Wife Not Designated As HOH,05 Son,04 Spouse Not Designated As HOH,02 LOH,01 HOH",
        "member_attribute_name": "education_ranges"
      }
    },
    "created_at": "2023-09-25T15:45:47.916255+00:00"
  },
  {
    "name_label": "head of household flag",
    "description": null,
    "updated_at": "1970-01-01T05:30:00+00:00",
    "name": "head_of_household_flag",
    "country": "US",
    "values": {
      "values": {
        "attribute_labels": "N = The person does not work outside of the home,Y = The person works outside of the home",
        "description": "N = The person does not work outside of the home,Y = The person works outside of the home",
        "member_attribute_name": "head_of_household_flag"
      }
    },
    "created_at": "2023-09-25T15:45:47.916255+00:00"
  },
  {
    "name_label": "internet usage work",
    "description": null,
    "updated_at": "1970-01-01T05:30:00+00:00",
    "name": "internet_usage_work",
    "country": "US",
    "values": {
      "values": {
        "attribute_labels": ",,,,,The number of hours a week the person works (00-99),,,,,,,,,,02 LOH,,Unmarried Partner - Female,,,,,,,09 Partner Living With But Not Married To,,,,,01 HOH,,,,,04 Spouse Not Designated As HOH,,,07 Other Relative,,,,,,,08 Non-Relative Household Member,,,,,,,,,,10 Long Term Visitor,,,,,,,Unmarried Partner - Male,,,,,,,,,,,,,,,,,,06 Daughter,,,,,,99 = Unknown,,,,,,,11 LOH as HOH,,05 Son,,,,,,,,,,Unknown,,,,,,,03 Wife Not Designated As HOH,,,,,,,,,,,",
        "description": ",,,,,The number of hours a week the person works (00-99),,,,,,,,,,02 LOH,,Unmarried Partner - Female,,,,,,,09 Partner Living With But Not Married To,,,,,01 HOH,,,,,04 Spouse Not Designated As HOH,,,07 Other Relative,,,,,,,08 Non-Relative Household Member,,,,,,,,,,10 Long Term Visitor,,,,,,,Unmarried Partner - Male,,,,,,,,,,,,,,,,,,06 Daughter,,,,,,99 = Unknown,,,,,,,11 LOH as HOH,,05 Son,,,,,,,,,,No information available,,,,,,,03 Wife Not Designated As HOH,,,,,,,,,,,",
        "member_attribute_name": "internet_usage_work"
      }
    },


{"country":"US","name":"avid_moviegoer_code","name_label":"Avid Moviegoer Code","values":{"N":{"label":"N = The person is not an avid moviegoer","description":"N = The person is not an avid moviegoer"},"Y":{"label":"Y = The person is an avid moviegoer.","description":"Y = The person is an avid moviegoer."}}},{"country":"US","name":"education_ranges","name_label":"Education Ranges","values":{"":{"label":"Blank for persons < 18.","description":"Blank for persons < 18."},"1":{"label":"1 = grade school (i.e., 0-8 years)","description":"1 = grade school (i.e., 0-8 years)"},"2":{"label":"2 = Some High School (i.e., 9-11 years)","description":"2 = Some High School (i.e., 9-11 years)"},"3":{"label":"3 = High School graduate (i.e., 12 years)","description":"3 = High School graduate (i.e., 12 years)"},"4":{"label":"4 = Some college (i.e., 1-3 years of college)","description":"4 = Some college (i.e., 1-3 years of college)"},"5":{"label":"5 = College Graduate (i.e., 4+ years of college)","description":"5 = College Graduate (i.e., 4+ years of college)"}}},{"country":"US","name":"frequent_moviegoer_code","name_label":"Frequent Moviegoer Code","values":{"N":{"label":"N= The person is not a frequent moviegoer.","description":"N= The person is not a frequent moviegoer."},"Y":{"label":"Y= The person is a frequent moviegoer.","description":"Y= The person is a frequent moviegoer."}}}












   def get_estimate_population_size_query(self, min_age, max_age, attributes) -> Query:
        values = {
            "min_age": min_age,
            "max_age": max_age,
            "start_date": self.record_start_date,
            "end_date": self.record_end_date,
        }
        where_conditions = [" AND m.age_qty BETWEEN :min_age AND :max_age"]

        i = 0
        attr_name = "attr_name"
        attr_val = "attr_val"
        for name, value in attributes.items():
            c_name = f"{attr_name}_{i}"
            c_value = f"{attr_val}_{i}"
            where_conditions.append(
                f" AND member_attribute_name = :{c_name}"
                f" AND member_attribute_val = :{c_value}"
            )
            i += 1
            values[c_name] = name
            values[c_value] = value
            print(values[c_name], values[c_value])

        final_query = self.base_query + "".join(where_conditions)
        print("#####################")
        print(f"estimate_population_sizequery{final_query}")
        print("####################################")
        return Query(final_query, values)


    def get_estimated_population_size(self, min_age, max_age, attributes) -> int:
        estimate_query = self.get_estimate_population_size_query(
            min_age=min_age, max_age=max_age, attributes=attributes
        )
        print("############################################")
        print(f"estimate query{estimate_query}")
        print("#############################################")

        results = self.bq_engine.execute(
            text(estimate_query.named_query), estimate_query.values
        ).fetchall()
        print("##################################################")
        print(f"EstimateAudience{results[0][0]}")
        print("####################################################")
        return results[0][0] if results else 0

   def base_query(self):
        query = [
            "SELECT Count(DISTINCT a.member_id) FROM",
            f"`{self.member_attribute_table}` a",
            f"JOIN `{self.member_dim_table}` m",
            f"ON a.member_id = m.member_id AND a.record_date = m.record_date",
            f"WHERE a.record_date Between :start_date AND :end_date",
        ]
        return " ".join(query)




[8:54 PM] Voleti Subash

SELECT Count(DISTINCT table_1.member_id)
FROM (
SELECT member_id 
FROM `ltvo-datalake-prod-dfd5.f_ltvo_us.member_attribute_dim` 
WHERE record_date = "2023-09-06" 

  AND member_attribute_name = "race"

  AND member_attribute_val = "3"

) table_1

inner join (
SELECT member_id 
FROM `ltvo-datalake-prod-dfd5.f_ltvo_us.member_attribute_dim` 
WHERE record_date = "2023-09-06" 

  AND member_attribute_name = "origin"

  AND member_attribute_val = "1"

) table_2
on table_1.member_id = table_2.member_id

[8:55 PM] Voleti Subash

SELECT Count(DISTINCT table_1.member_id)
FROM (
SELECT member_id 
FROM `ltvo-datalake-prod-dfd5.f_ltvo_us.member_attribute_dim` 
WHERE record_date = "2023-09-06" 

  AND member_attribute_name = "race"

  AND member_attribute_val = "3"

) table_1

inner join (
SELECT member_id 
FROM `ltvo-datalake-prod-dfd5.f_ltvo_us.member_attribute_dim` 
WHERE record_date = "2023-09-06" 

  AND member_attribute_name = "origin"

  AND member_attribute_val = "1"

) table_2
on table_1.member_id = table_2.member_id

inner join (
SELECT member_id 
FROM `ltvo-datalake-prod-dfd5.f_ltvo_us.member_attribute_dim` 
WHERE record_date = "2023-09-06" 

  AND member_attribute_name = "origin"

  AND member_attribute_val = "2"

) table_3
on table_1.member_id = table_3.member_id

  AND table_2.member_id = table_3.member_id



def get_estimate_population_size_query(self, min_age, max_age, attributes) -> Query:
    values = {
        "min_age": min_age,
        "max_age": max_age,
        "start_date": self.record_start_date,
        "end_date": self.record_end_date,
    }
    where_conditions = [" AND m.age_qty BETWEEN :min_age AND :max_age"]

    join_tables = []
    i = 0
    attr_name = "attr_name"
    attr_val = "attr_val"
    for name, value in attributes.items():
        c_name = f"{attr_name}_{i}"
        c_value = f"{attr_val}_{i}"
        join_tables.append(
            f"INNER JOIN (SELECT member_id FROM `{self.member_attribute_table}` WHERE "
            f"record_date BETWEEN :start_date AND :end_date "
            f"AND member_attribute_name = :{c_name} "
            f"AND member_attribute_val = :{c_value}) table_{i} ON m.member_id = table_{i}.member_id"
        )
        i += 1
        values[c_name] = name
        values[c_value] = value

    final_query = self.base_query() + " " + " ".join(join_tables)
    print("#####################")
    print(f"estimate_population_sizequery: {final_query}")
    print("####################################")
    return Query(final_query, values)

def base_query(self):
    query = [
        "SELECT COUNT(DISTINCT a.member_id) FROM",
        f"`{self.member_attribute_table}` a",
        f"JOIN `{self.member_dim_table}` m",
        f"ON a.member_id = m.member_id AND a.record_date = m.record_date",
        f"WHERE a.record_date BETWEEN :start_date AND :end_date",
    ]
    return " ".join(query)















def base_query(self):
    subquery = (
        f"SELECT member_id FROM `{self.member_attribute_table}` "
        f"WHERE record_date BETWEEN :start_date AND :end_date "
        f"AND member_attribute_name = :attr_name "
        f"AND member_attribute_val = :attr_val"
    )

    query = [
        f"SELECT COUNT(DISTINCT table_1.member_id) FROM",
        "(",
        f"SELECT member_id FROM `{self.member_attribute_table}` a",
        f"WHERE a.record_date BETWEEN :start_date AND :end_date",
        f"AND a.member_attribute_name = :attr_name",
        f"AND a.member_attribute_val = :attr_val",
        ") table_1",
    ]

    return " ".join(query), subquery


def get_estimate_population_size_query(self, min_age, max_age, attributes) -> Query:
    values = {
        "min_age": min_age,
        "max_age": max_age,
        "start_date": self.record_start_date,
        "end_date": self.record_end_date,
    }
    where_conditions = [" AND m.age_qty BETWEEN :min_age AND :max_age"]

    join_tables = []
    i = 0
    for name, value in attributes.items():
        c_name = f"attr_name_{i}"
        c_value = f"attr_val_{i}"
        base_query, subquery = self.base_query()
        join_tables.append(
            f"INNER JOIN ({subquery}) table_{i} ON m.member_id = table_{i}.member_id"
        )
        values[c_name] = name
        values[c_value] = value
        i += 1

    final_query = base_query + " " + " ".join(join_tables)
    print("#####################")
    print(f"estimate_population_sizequery: {final_query}")
    print("####################################")
    return Query(final_query, values)
=============================================================================
def get_estimate_population_size_query(self, min_age, max_age, attributes) -> Query:
    values = {
        "min_age": min_age,
        "max_age": max_age,
        "start_date": self.record_start_date,
        "end_date": self.record_end_date,
    }
    where_conditions = [" AND m.age_qty BETWEEN :min_age AND :max_age"]

    i = 1
    subqueries = []
    for name, value in attributes.items():
        subquery = (
            f"(SELECT member_id "
            f"FROM `ltvo-datalake-prod-dfd5.f_ltvo_us.member_attribute_dim` "
            f"WHERE record_date = :start_date "
            f"AND member_attribute_name = :attr_name_{i} "
            f"AND member_attribute_val = :attr_val_{i})"
        )
        subqueries.append(subquery)
        values[f"attr_name_{i}"] = name
        values[f"attr_val_{i}"] = value
        i += 1

    final_query = f"SELECT Count(DISTINCT table_1.member_id)\n"
    final_query += f"FROM {subqueries[0]} table_1\n"
    for i in range(2, len(subqueries) + 1):
        final_query += f"inner join {subqueries[i-1]} table_{i}\n"
        for j in range(1, i):
            final_query += f"on table_1.member_id = table_{j}.member_id\n"

    return Query(final_query, values)

SELECT Count(DISTINCT table_1.member_id)\nFROM (SELECT member_id FROM `ltvo-datalake-prod-dfd5.f_ltvo_us.member_attribute_dim` WHERE record_date = :start_date AND member_attribute_name = :attr_name_1 AND member_attribute_val = :attr_val_1) table_1\ninner join (SELECT member_id FROM `ltvo-datalake-prod-dfd5.f_ltvo_us.member_attribute_dim` WHERE record_date = :start_date AND member_attribute_name = :attr_name_2 AND member_attribute_val = :attr_val_2) table_2\non table_1.member_id = table_1.member_id\n', values={'min_age': 19, 'max_age': 64, 'start_date': '2023-06-26', 'end_date': '2023-09-26', 'attr_name_1': 'race', 'attr_val_1': '3', 'attr_name_2': 'origin', 'attr_val_2': '1'}




















SELECT Count(DISTINCT table_1.member_id)\n
  FROM
  (SELECT member_id
  FROM `ltvo-datalake-prod-dfd5.f_ltvo_us.member_attribute_dim` 
  WHERE record_date = "2023-09-06"
  
  AND member_attribute_name = "race"
  
  AND member_attribute_val = "3"
  )  table_1
  inner join(
  
  SELECT member_id
  FROM `ltvo-datalake-prod-dfd5.f_ltvo_us.member_attribute_dim`
  
  WHERE record_date = "2023-09-06"
  
  AND member_attribute_name = "origin" 
  AND member_attribute_val = "1"
  
  ) table_2
  on table_1.member_id = table_1.member_id'
