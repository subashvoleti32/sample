from google.cloud import storage
from get_appconstants import dev_configs
from datetime import datetime, timezone

def objects_in_date_range(bucket, prefix, start_date, end_date):
    start_datetime = datetime.strptime(start_date, "%Y-%m-%d").replace(tzinfo=timezone.utc)
    end_datetime = datetime.strptime(end_date, "%Y-%m-%d").replace(tzinfo=timezone.utc)
    
    for blob in bucket.list_blobs(prefix=prefix):
        #created = blob.time_created.replace(tzinfo=timezone.utc)
        created=blob.time_created
        #if created >= start_datetime and created < end_datetime:
        if start_datetime <=created< end_datetime:
            yield blob.name

def get_csv_file_names(country, category, startdate=None, enddate=None):
    storage_client = storage.Client()
    bucket_name = dev_configs.get('bucket_name')
    ns = dev_configs.get('ns')
    print(f"Bucket_name is {bucket_name}")
    print(f"Namespace is {ns}")
    blob_prefix = f"ltvo_{ns}/na/{country}/{category}"
    print(f"File path is {blob_prefix}")
    bucket = storage_client.bucket(bucket_name)
    
    csv_file_names = []
    for obj_name in objects_in_date_range(bucket, blob_prefix, startdate, enddate):
        if obj_name.lower().endswith(".csv"):
            csv_file_names.append({"csv_file_name": obj_name.split("/")[-1]})
                
    return csv_file_names

country = input("Enter Country name: ")
category = input("Enter Category name: ")
startdate = input("Enter start date (YYYY-MM-DD): ")
enddate = input("Enter end date (YYYY-MM-DD): ")
csv_file_names = get_csv_file_names(country, category, startdate, enddate)
print(csv_file_names)
