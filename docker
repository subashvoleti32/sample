ERROR: failed to solve: process "/bin/sh -c /app/spanner_emulator_setup.sh" did not complete successfully: exit code: 
127

#It instructs Docker Engine to use official python:3.10 as the base image
FROM python:3.10

#It creates a working directory(app) for the Docker image and container
WORKDIR /app

#It copies the framework and the dependencies for the FastAPI application into the working directory
COPY requirements.txt .

#It will install the framework and the dependencies in the `requirements.txt` file.
RUN pip install -r requirements.txt

#It will copy the remaining files and the source code from the host `fast-api` folder to the `app` container working directory
COPY spanner_emulator_setup.sh /app/spanner_emulator_setup.sh

RUN chmod +x /app/spanner_emulator_setup.sh

RUN /app/spanner_emulator_setup.sh


COPY . /app
#It will expose the FastAPI application on port `8000` inside the container
EXPOSE 8000

#It is the command that will start and run the FastAPI application container
CMD ["uvicorn", "src.controller.application:app", "--host", "0.0.0.0"]


#!/bin/bash

{
docker pull gcr.io/cloud-spanner-emulator/emulator
docker run -p 9010:9010 -p 9020:9020 gcr.io/cloud-spanner-emulator/emulator
 } &
 
gcloud config configurations create emulator
gcloud config set auth/disable_credentials true
gcloud config set project test2-project 
gcloud config set api_endpoint_overrides/spanner http://localhost:9020/
gcloud spanner instances create test2-instance  --config=emulator-config --description="test2-instance" --nodes=1
# gcloud spanner databases create test-database --instance=test2-instance
export SPANNER_EMULATOR_HOST=localhost:9010
set SPANNER_EMULATOR_HOST=localhost:9010
gcloud spanner databases create test-database --instance test2-instance --ddl "CREATE TABLE attribute_country (country_code STRING(36), country_name STRING(200)) PRIMARY KEY (country_code)"

gcloud spanner databases ddl update test-database --instance=test2-instance --ddl "CREATE TABLE attributes_names (country_code STRING(36), attribute_name STRING(250)) PRIMARY KEY (country_code,attribute_name)"


gcloud spanner databases ddl update test-database --instance=test2-instance --ddl "CREATE TABLE attributes_label (country_code STRING(36), attribute_name STRING(250),label STRING(306),description STRING(250),CreatedAt TIMESTAMP,UpdatedAt TIMESTAMP) PRIMARY KEY (country_code,attribute_name)"



gcloud spanner databases ddl update test-database --instance=test2-instance --ddl "CREATE TABLE attributes_value (country_code STRING(36),attribute_name STRING(400), attribute_value STRING(250)) PRIMARY KEY (country_code,attribute_name,attribute_value)"

gcloud spanner databases ddl update test-database --instance=test2-instance --ddl "CREATE TABLE attributes_value_label (country_code STRING(36),attribute_name STRING(400), attribute_value STRING(250),label STRING(306),description STRING(250)) PRIMARY KEY (country_code,attribute_name,attribute_value)"



 

python insert_data_emulator.py

























FROM google/cloud-sdk:latest

# Install Docker
RUN apt-get update && apt-get install -y apt-transport-https ca-certificates curl gnupg lsb-release && \
    curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg && \
    echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian \
    $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null && \
    apt-get update && apt-get install -y docker-ce-cli

# Install gcloud components
RUN apt-get install -y google-cloud-sdk-cloud-build-local

# Copy the shell script to the container
COPY spanner_emulator_setup.sh /app/spanner_emulator_setup.sh

# Set the working directory
WORKDIR /app

# Make the shell script executable
RUN chmod +x /app/spanner_emulator_setup.sh

# Execute the shell script
CMD ["bash", "/app/spanner_emulator_setup.sh"]



FROM google/cloud-sdk:latest

# Install necessary dependencies
RUN apt-get update && \
    apt-get install -y curl && \
    curl -sSL https://sdk.cloud.google.com | bash

# Configure gcloud
RUN gcloud components install spanner-emulator beta

# Copy the shell script and the Python script
COPY spanner_emulator_setup.sh /app/spanner_emulator_setup.sh
COPY insert_data_emulator.py /app/insert_data_emulator.py

# Make the shell script executable
RUN chmod +x /app/spanner_emulator_setup.sh

# Run the shell script
RUN /app/spanner_emulator_setup.sh

# Expose any necessary ports
EXPOSE 9010 9020

# Set the entrypoint to the Python script
ENTRYPOINT ["python", "/app/insert_data_emulator.py"]
