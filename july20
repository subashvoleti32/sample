@display_audience_route.get('/audience',tags=["DisplayAudience"])
def get_audience_response():
    res= AudienceAttributeService().get_audience_response()
    return {"audiences":[AudienceSchemaResponse(**dict(zip(AudienceSchemaResponse.__fields__,item))) for item in res]}

class AudienceSchemaResponse(BaseModel):
    name:str
    description:str
    gender:str
    minimum_age:int
    maximum_age:int
    country:str
    attributes:Dict

def get_audience_response(self):
        try:
            # db_res2 = self.db.query(value_label).filter(value_label.c.attribute_value == attribute_value and value_label.c.country_code == country_name)
            db_res2 = self.db.query(audience_table_create).all()
            #db_res1 = self.db.query(audience_table,value_label).filter(audience_table_create.c.Country == value_label.c.country_code)
            return db_res2
        except Exception as e:
            print(f"Exception is {e}")
        finally:
            self.db.close()
