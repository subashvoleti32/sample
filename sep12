{
	"grouping_description": {
		"type": "string",
		"default": null
	},

	"element_name": {
		"type": "string",
		"default": null
	},

	"channel_name": {
		"type": "string",
		"default": null
	},

	"start_day": {
		"type": "date",
		"default": "date.now - 1 year"
	},

	"end_day": {
		"type": "date",
		"default": "20230813000"
	},

	"start_time": {
		"type": "timestamp",
		"default": "00:00:00 AM"
	},

	"end_time": {
		"type": "timestamp",
		"default": "11:59:59 PM"
	},

	"include_program_type_name": {
		"type": "bool",
		"default": "False"
	},

	"program_type_name": {
		"type": "list",
		"default": null,
		"value": [
			"SPORTS",
			"News"
		]
	},

	"include_program_event_name": "TRUE",
	"program_event_name": "SOCCER SOCCER-MEXICAN LG PLAYOFFS;SOCCER-MEXICAN LG REG SEASON",
	"include_program_name": "TRUE",
	"program_name": "Comedy.tv  COMICS UNLEASHED WORLDS FUNNIEST WEATHER"

}

{
	country_code:"US",
	"element_name":"Aspire",
	"group_description":"AA",
	"definition_attributes": 
		{
			"channelname":"BET",
			"Type":"BroadCast"
			"start_day":0,
			"end_day":6,
			"start_time":"",
			"end_time":"end_time",
			"include_program_type_name":True,
			"program_type_name":"Sports_event",
			"include_program_event_name":"True",
			"program_event_name":"SOCCER SOCCER-MEXICAN LG PLAYOFFS;SOCCER-MEXICAN LG REG SEASON",
			"include_program_name":"True",
			"program_name":"Comedy.tv  COMICS UNLEASHED WORLDS FUNNIEST WEATHER"
		}
}



from fastapi import FastAPI, Query

app = FastAPI()

# Sample JSON data
sample_data = {
    "country_code": "US",
    "element_name": "Aspire",
    "group_description": "AA",
    "definition_attributes": {
        "channelname": "BET",
        "Type": "BroadCast",
        "start_day": 0,
        "end_day": 6,
        "start_time": "",
        "end_time": "end_time",
        "include_program_type_name": True,
        "program_type_name": "Sports_event",
        "include_program_event_name": True,
        "program_event_name": "SOCCER SOCCER-MEXICAN LG PLAYOFFS;SOCCER-MEXICAN LG REG SEASON",
        "include_program_name": True,
        "program_name": "Comedy.tv  COMICS UNLEASHED WORLDS FUNNIEST WEATHER",
    },
}

# Function to transform the data
def transform_data(data):
    transformed_data = []

    for key, value in data.items():
        if isinstance(value, dict):
            for sub_key, sub_value in value.items():
                if sub_key == "Type":
                    deal_values = ["BroadCast", "Cable", "Sports"]
                elif sub_key in ["include_program_type_name", "include_program_event_name", "include_program_name"]:
                    deal_values = ["True", "False"]
                elif sub_key == "program_type_name":
                    deal_values = ["sports", "chess", "hockey", "football", "cricket", "rubi"]
                elif sub_key == "program_event_name":
                    deal_values = ["BroadCast", "Cable", "Sports"]
                else:
                    deal_values = [str(sub_value)]

                transformed_data.append({"deal_name": sub_key, "deal_values": deal_values})

    return transformed_data

# FastAPI endpoint
@app.get("/get_data/")
async def get_data(country_code: str = Query(None, title="Country Code")):
    if country_code == sample_data.get("country_code"):
        transformed_data = transform_data(sample_data)
        return transformed_data
    else:
        return {"message": "Country not found"}

if __name__ == "__main__":
    import uvicorn






from google.cloud import spanner
import uuid,datetime

client = spanner.Client()
instanceid="deals-instance"
databaseid="deals-db"
database = client.instance(instanceid).database(databaseid)

def insert_deal_attribute_values(transaction,country_attribute):
    created_time=datetime.datetime.now()
    updated_time=datetime.datetime.now()
    row_ct = transaction.execute_update(
        "INSERT INTO deal_attributes (country_code,attributes,created_at,updated_at) VALUES "
        f"('{country_attribute['country_code']}', '{country_attribute['attributes']}','{created_time}','{updated_time}')"
    )
sample_data={
    
	"grouping_description": {
		"type": "string",
		"default": "null"
	},

	"element_name": {
		"type": "string",
		"default": "null"
	},

	"channel_name": {
		"type": "string",
		"default": "null"
	},

	"start_day": {
		"type": "date",
		"default": "date.now - 1 year"
	},

	"end_day": {
		"type": "date",
		"default": "20230813000"
	},

	"start_time": {
		"type": "timestamp",
		"default": "00:00:00 AM"
	},

	"end_time": {
		"type": "timestamp",
		"default": "11:59:59 PM"
	},

	"include_program_type_name": {
		"type": "bool",
		"default": "False"
	},

	"program_type_name": {
		"type": "list",
		"default": "null",
		"value": [
			"SPORTS",
			"News"
		]
	},

	"include_program_event_name": "TRUE",
	"program_event_name": "SOCCER SOCCER-MEXICAN LG PLAYOFFS;SOCCER-MEXICAN LG REG SEASON",
	"include_program_name": "TRUE",
	"program_name": "Comedy.tv  COMICS UNLEASHED WORLDS FUNNIEST WEATHER"

}
country_attribute = {"country_code":'US',"attributes":sample_data}

database.run_in_transaction(insert_deal_attribute_values,country_attribute)

le "C:\Users\10722751\AppData\Local\Programs\Python\Python311\Lib\site-packages\google\api_core\grpc_helpers.py", line 74, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.InvalidArgument: 400 Syntax error: Expected ")" or "," but got identifier "grouping_description" [at 1:94]
...attributes,created_at,updated_at) VALUES ('US', '{'grouping_description': ...

    uvicorn.run(app, host="0.0.0.0", port=8000)


{
	country_code:"US",
	"element_name":"Aspire",
	"group_description":"AA",
	"definition_attributes": [
		{
		"deal_name":"channel_name",
		"deal_values":[
			{"value":"ABC"},
			{"value":"ADSM"},
			{"value":"AMC"}
		]
		},
		{
		"deal_name":"Type",
		"deal_values":[
			{"value":"BroadCast"},
			{"value":"Cable"},
			{"value":"Sports"}
		]
		},
		{
		"deal_name":"start_day",
		"deal_values":[
			"value":"0",
			"value":"1",
			"value":"2",
			"value":"3",
			"value":"4",
			"value":"5",
		]
		},
		{
		"deal_name":"end_day",
		"deal_values":[
			{"value":"0"},
			{"value":"1"},
			{"value":"2"},
			{"value":"3"},
			{"value":"4"},
			{"value":"5"},
		]
		},
		{
		"deal_name":"start_time",
		"deal_values":current time-1year below
		},
		{
		"deal_name":"end_time",
		"deal_values":current time
		},
		{
		"deal_name":"include_program_type_name",
		"deal_values":[
			{"value":"True"},
			{"value":"False"},
			
		]
		},
		{
		"deal_name":"program_type_name",
		"deal_values":[
			{"value":"sports"},
			{"value":"chess"},
			{"value":"hockey"},
			{"value":"football"},
			{"value":"cricket"},
			{"value":"rubi"},
		]
		},
		{
		"deal_name":"include_program_event_name",
		"deal_values":[
			"value":"True",
			"value":"False",
			
		]
		},
		{
		"deal_name":"program_event_name",
		"deal_values":[
			{"value":"a"},
			{"value":"b"},
			{"value":"c"},
			{"value":"d"},
			{"value":"e"},
			{"value":"f"},
		]
		},
		"deal_name":"include_program_name",
		"deal_values":[
			{"value":"True"},
			{"value":"False"},
			
		]
		},
		{
		"deal_name":"program_event_name",
		"deal_values":[
			{"value":"a"},
			{"value":"b"},
			{"value":"c"},
			{"value":"d"},
			{"value":"e"},
			{"value":"f"},
		]
		}
	]



sample_data = {
    "deal_attributes": [
        {
            "deal_name": "channel_name",
            "deal_values": [
                {"value": "ABC"},
                {"value": "ADSM"},
                {"value": "AMC"}
            ]
        },
        {
            "deal_name": "Type",
            "deal_values": [
                {"value": "BroadCast"},
                {"value": "Cable"},
                {"value": "Sports"}
            ]
        },
        {
            "deal_name": "start_day",
            "deal_values": [
                {"value": "0"},
                {"value": "1"},
                {"value": "2"},
                {"value": "3"},
                {"value": "4"},
                {"value": "5"},
            ]
        },
        {
            "deal_name": "end_day",
            "deal_values": [
                {"value": "0"},
                {"value": "1"},
                {"value": "2"},
                {"value": "3"},
                {"value": "4"},
                {"value": "5"},
            ]
        },
        {
            "deal_name": "start_time",
            "deal_values": "current time-1year below"
        },
        {
            "deal_name": "end_time",
            "deal_values": "current time"
        },
        {
            "deal_name": "include_program_type_name",
            "deal_values": [
                {"value": "True"},
                {"value": "False"}
            ]
        },
        {
            "deal_name": "program_type_name",
            "deal_values": [
                {"value": "sports"},
                {"value": "chess"},
                {"value": "hockey"},
                {"value": "football"},
                {"value": "cricket"},
                {"value": "rubi"}
            ]
        },
        {
            "deal_name": "include_program_event_name",
            "deal_values": [
                {"value": "True"},
                {"value": "False"}
            ]
        },
        {
            "deal_name": "program_event_name",
            "deal_values": [
                {"value": "a"},
                {"value": "b"},
                {"value": "c"},
                {"value": "d"},
                {"value": "e"},
                {"value": "f"}
            ]
        },
        {
            "deal_name": "include_program_name",
            "deal_values": [
                {"value": "True"},
                {"value": "False"}
            ]
        },
        {
            "deal_name": "program_event_name",
            "deal_values": [
                {"value": "a"},
                {"value": "b"},
                {"value": "c"},
                {"value": "d"},
                {"value": "e"},
                {"value": "f"}
            ]
        }
    ]
}

