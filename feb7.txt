class SingletonSession:
    _instance = None

    @staticmethod
    def get_instance():
        if SingletonSession._instance is None:
            SingletonSession()
        return SingletonSession._instance

    def __init__(self):
        if SingletonSession._instance is not None:
            raise Exception("SingletonSession is already instantiated")
        else:
            app_logger.info("Attempting to extablish DB connection")
            app_logger.info(f'Attempting to set schema to {get_active_schema()}')
            Session = sessionmaker(bind=get_db_engine())
            self.session = Session()
            self.session.execute(f"SET search_path TO {get_active_schema()}")
            SingletonSession._instance = self
