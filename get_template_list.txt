UI will pass a path such as “/na/usa/fhc”

Syntax for the path is /na/{country}/{category} This syntax will match the syntax of where the files are located in the COST bucket

API will return the list of files located in the GCS cost bucket with the above path.

Path in GCS should be namespaced by environment. For example, DEV should have a prefix of /dev/na/usa/fhc

Pass (Category and country) and retrieve the list of tempelate

Array of string

JSON format

Below is the confluence link



GET COST FILE
UI will pass a path such as “/na/usa/fhc/FHC_UNCONSTRAINED”

syntax is /na/{country}/{category}/{template}

API must validate the user has access to the country / category for which they are calling the endpoint. Can use legacy API functionality for this validation.

API must return the json list of deals that are in the csv file at the above path


gcp_storage:
    image: oittaa/gcp-storage-emulator
    container_name: gcp_storage
    ports:
      - "9023:9023"
    environment:
      PORT: 9023
      HOST: gcp_storage
    volumes:
      - gcp-data:/storage



 source_blob = storage_client.list_blobs(bucket, prefix=prefix, delimiter="/")
        copied_list = []
        for blob in source_blob:
            if blob.name.endswith(".csv"):
                source_bucket.copy_blob(blob, destination_bucket, dest_path + blob.name.split("/")[-1])
                copied_list.append({"file_copied" : bucket + "/"+ dest_path + blob.name.split("/")[-1]})
        return copied_list

BUCKET_NAME = 'ltvo-dswb-prod-c423-ltvo-us-t4p8zaot'
if country not in generate_fn: 
        return {
            'message': f"Country {country} not supported."
        }, http.HTTPStatus.NOT_FOUND
    
    storage_client = storage.Client()
    bucket_name = BUCKET_NAME # param from config
    blob_name = 'ESM_STG/' + country + '/' + template + '.csv' 
    
    bucket = storage_client.get_bucket(bucket_name)
    blob = bucket.get_blob(blob_name)
    if not blob: return

